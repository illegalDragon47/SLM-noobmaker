# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fm/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to include the following files:
#  .idea/
#  *.iml
#  *.ipr
#  *.iws
#  .idea/

# PyTorch specific
*.pth
*.pt
*.ckpt
*.safetensors
*.bin
*.model
*.weights

# Model files and checkpoints
models/
checkpoints/
runs/
logs/
wandb/
lightning_logs/

# Training data (keep templates and examples, exclude raw user data)
data/raw/*
!data/raw/.gitkeep
data/processed/*
!data/processed/.gitkeep

# Exports
exports/
*.gguf
*.onnx
*.torchscript

# Configuration files with sensitive data
configs/*.yaml
configs/*.yml
configs/*.json
!configs/defaults.yaml
!configs/defaults.yml
!configs/defaults.json

# Environment variables
.env
.env.local
.env.production
.env.staging

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*.log
*.out

# Backup files
*.bak
*.backup
*.old

# Jupyter notebook checkpoints
.ipynb_checkpoints/

# Local development
local/
dev/
test_outputs/

# Cache directories
.cache/
.pytest_cache/
.coverage
htmlcov/

# Virtual environments
venv/
env/
.venv/
.env/

# Node modules (if any frontend components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Large files that shouldn't be in git
*.h5
*.hdf5
*.pkl
*.pickle
*.joblib
*.npy
*.npz

# Dataset files (keep structure, exclude actual data)
datasets/
!datasets/.gitkeep
!datasets/README.md

# Results and outputs
results/
outputs/
experiments/
runs/

# Documentation builds
docs/_build/
docs/build/

# Coverage reports
.coverage
coverage.xml
htmlcov/

# Profiling data
.prof
*.prof

# Memory dumps
*.dump
*.dmp

# Core dumps
core.*

# Temporary directories
tmp/
temp/
